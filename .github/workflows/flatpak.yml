name: Flatpak
on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master
  schedule:
  - cron:  '10 12 * * 0'

concurrency: 
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.S3_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.S3_SECRET_KEY }}
  AWS_DEFAULT_REGION: us-west-2

jobs:
  flatpak:
    name: flatpak-${{ matrix.type }}-build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
        # - type: arm
        #   architecture: linux/arm/v7
        #   snap_file: boinc_armhf.flatpak
        # - type: arm64
        #   architecture: linux/arm64
        #   snap_file: boinc_arm64.flatpak
        - type: x64
          architecture: linux/amd64
          flatpak_file: boinc_amd64.flatpak

    steps:
    - uses: actions/checkout@v3

    - name: Install dependencies
      run: |
        sudo apt -qq update
        sudo apt install -y p7zip-full

    - name: Running from origin repo
      if: ${{ success() && env.AWS_ACCESS_KEY_ID != 0 && env.AWS_SECRET_ACCESS_KEY != 0 }}
      run: |
        echo "VCPKG_BINARY_SOURCES=clear;x-aws,s3://vcpkg.cache.boinc/,readwrite" >> $GITHUB_ENV

    - name: Running from fork
      if: ${{ success() && (env.AWS_ACCESS_KEY_ID == 0 || env.AWS_SECRET_ACCESS_KEY == 0) }}
      run: |
        echo "VCPKG_BINARY_SOURCES=clear;x-aws-config,no-sign-request;x-aws,s3://vcpkg.cache.boinc/,read" >> $GITHUB_ENV
    
    - name: Configure docker qemu
      if: success()
      uses: docker/setup-qemu-action@v2

    - name: Build flatpak boinc
      if: success()
      run: |
        docker run \
          --rm \
          --tty \
          --privileged \
          --volume $PWD:$PWD \
          --workdir $PWD \
          --platform "${{ matrix.architecture }}" \
          --env VCPKG_BINARY_SOURCES=$VCPKG_BINARY_SOURCES \
          --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
          --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
          --env AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION \
          ubuntu:focal \
          bash -c " \
            export DEBIAN_FRONTEND=noninteractive; export TZ=Etc/UTC; \
            apt -qq update && \
            apt install -y flatpak flatpak-builder && \
            flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo && \
            flatpak install -y flathub org.gnome.Sdk//42 flathub org.gnome.Platform//42 && \
            flatpak-builder build-dir edu.berkeley.BOINC.yml --verbose && \
            flatpak build-export export build-dir && \
            flatpak build-bundle export ${{ matrix.flatpak_file }} edu.berkeley.BOINC \
          "

    - name: Install boinc flatpak
      if: success()
      run: |
        docker run \
          --rm \
          --tty \
          --privileged \
          --volume $PWD:$PWD \
          --workdir $PWD \
          --platform "${{ matrix.architecture }}" \
          --env VCPKG_BINARY_SOURCES=$VCPKG_BINARY_SOURCES \
          --env AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID \
          --env AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY \
          --env AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION \
          ubuntu:focal \
          bash -c " \
            export DEBIAN_FRONTEND=noninteractive; export TZ=Etc/UTC; \
            apt -qq update && \
            apt install -y flatpak flatpak-builder && \
            flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo && \
            flatpak install -y flathub org.gnome.Platform//42 && \
            flatpak install -y --bundle ${{ matrix.flatpak_file }} \
          "

    - name: Prepare flatpak boinc file to upload
      if: success()
      run: sudo chown $USER ${{ matrix.flatpak_file }}

    - name: Prepare logs on failure
      if: ${{ failure() }}
      run: python ./deploy/prepare_deployment.py logs

    - name: Upload logs on failure
      if: ${{ failure() }}
      uses: actions/upload-artifact@v2
      with:
        name: snap_logs_${{ github.event.pull_request.head.sha }}
        path: deploy/logs.7z

    - name: Prepare artifacts for deploy
      if: success() 
      run: python ./deploy/prepare_deployment.py linux_flatpak

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      if: success()
      with:
        name: linux_flatpak_${{ matrix.type }}_${{ github.event.pull_request.head.sha }}
        path: deploy/linux_flatpak.7z
