name: Webassembly
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron:  '10 12 * * 0'

jobs:
  build:
    name: ${{ matrix.type }}-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        type: [client]
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - name: Install dependencies
        run: |
          sudo add-apt-repository 'deb http://archive.ubuntu.com/ubuntu bionic main universe'
          sudo apt-get -qq update
          sudo apt-get install -y p7zip-full zip

      - name: Cache dependencies
        uses: actions/cache@v2.1.3
        with:
          path: |
            3rdParty/buildCache
            !3rdParty/buildCache/wasm/vcpkgcache/
          key: wasm-${{ matrix.type }}-${{ hashFiles('wasm/*.sh') }}
          restore-keys: wasm-${{ matrix.type }}-

      - name: Configure Python
        if: ${{ success() && contains(matrix.type, 'vcpkg') }}
        run: |
          pip install boto3

      - name: Download vcpkg binary cache
        if: ${{ success() && contains(matrix.type, 'vcpkg') }}
        run: |
          python ./deploy/manage_vcpkg_archive_cache.py download 3rdParty/buildCache/wasm/vcpkgcache/vcpkg/archives/ wasm "edu.berkeley.boinc.github.actions.build.vcpkg.binary.cache"

      - name: Automake
        if: success()
        run: ./_autosetup

      - name: Configure client as webassembly
        if: success() && matrix.type == 'client'
        run: wasm/ci_configure_client.sh

      - name: Make
        if: success()
        run: wasm/ci_make.sh

      - name: Prepare logs on failure
        if: ${{ failure() }}
        uses: edgarrc/action-7z@v1.0.4
        with:
          args: 7z a -t7z -mx=9 deploy/logs.7z config.log -r0 3rdParty/wasm/vcpkg/buildtrees/*.log
      
      - name: Upload logs on failure
        if: ${{ failure() }}
        uses: actions/upload-artifact@v2
        with:
          name: wasm_logs_${{ matrix.type }}_${{ github.event.pull_request.head.sha }}
          path: deploy/logs.7z

      - name: Prepare artifacts for deploy
        if: success() && ! contains(matrix.type, 'libs') && ! contains(matrix.type, 'server') && ! contains(matrix.type, 'test')
        env:
          PULL_REQUEST: ${{ github.event.number }}
          PULL_REQUEST_SHA: ${{ github.event.pull_request.head.sha }}
        run: ./deploy/prepare_deployment.sh wasm_${{ matrix.type }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        if: ${{ ! contains(matrix.type, 'libs') && ! contains(matrix.type, 'server') && ! contains(matrix.type, 'test') }}
        with:
          name: wasm_${{ matrix.type }}_${{ github.event.pull_request.head.sha }}
          path: deploy/wasm_${{ matrix.type }}/*.7z

      - name: Upload vcpkg binary cache
        if: ${{ success() && contains(matrix.type, 'vcpkg') }}
        env:
          ACCESS_KEY: ${{ secrets.S3_ACCESS_KEY }}
          SECRET_KEY: ${{ secrets.S3_SECRET_KEY }}
        run: |
          python ./deploy/manage_vcpkg_archive_cache.py upload 3rdParty/buildCache/wasm/vcpkgcache/vcpkg/archives/ wasm "edu.berkeley.boinc.github.actions.build.vcpkg.binary.cache" "$ACCESS_KEY" "$SECRET_KEY"
